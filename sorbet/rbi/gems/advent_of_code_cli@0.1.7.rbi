# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `advent_of_code_cli` gem.
# Please instead update this file by running `bin/tapioca gem advent_of_code_cli`.


# source://advent_of_code_cli//lib/advent_of_code_cli/version.rb#3
module AdventOfCode; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#17
class AdventOfCode::CLI < ::Thor
  # source://advent_of_code_cli//lib/advent_of_code_cli.rb#27
  def download(day); end

  # source://thor/1.3.2/lib/thor.rb#334
  def example(*args); end

  # source://advent_of_code_cli//lib/advent_of_code_cli.rb#19
  def scaffold(day); end

  # source://advent_of_code_cli//lib/advent_of_code_cli.rb#36
  def solve(day); end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli.rb#51
  def rescue_invalid_day_error; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#4
module AdventOfCode::Commands; end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#5
class AdventOfCode::Commands::Command
  include ::Thor::Base
  include ::Thor::Invocation
  include ::Thor::Shell
  extend ::Thor::Base::ClassMethods
  extend ::Thor::Invocation::ClassMethods

  # @raise [InvalidDayError]
  # @return [Command] a new instance of Command
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#8
  def initialize(day:); end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#36
  def create_file(file_name, contents = T.unsafe(nil)); end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#16
  def day_string; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#32
  def example_expected_file_name; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#28
  def example_file_name; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#24
  def input_file_name; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/command.rb#20
  def solution_file_name; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#8
class AdventOfCode::Commands::Download < ::AdventOfCode::Commands::Command
  # @return [Download] a new instance of Download
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#9
  def initialize(year:, day:); end

  # @raise [MissingCookieError]
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#14
  def execute; end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#33
  def cookie; end

  # @return [Boolean]
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#37
  def cookie_present?; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/download.rb#41
  def fetch_input; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/new.rb#5
module AdventOfCode::Commands::Example; end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/example.rb#9
class AdventOfCode::Commands::Example::CLI < ::Thor
  def help(command = T.unsafe(nil), subcommand = T.unsafe(nil)); end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example.rb#11
  def new(day, name); end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example.rb#20
  def solve(day, name); end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example.rb#32
  def rescue_invalid_day_error; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/new.rb#6
class AdventOfCode::Commands::Example::New < ::AdventOfCode::Commands::Command
  # @return [New] a new instance of New
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/new.rb#7
  def initialize(day:, name:); end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/new.rb#12
  def execute; end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/new.rb#39
  def expected_file_contents; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/solve.rb#8
class AdventOfCode::Commands::Example::Solve < ::AdventOfCode::Commands::Command
  # @return [Solve] a new instance of Solve
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/solve.rb#9
  def initialize(day:, name:); end

  # @raise [MissingExampleError]
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/solve.rb#14
  def execute; end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/solve.rb#58
  def expected_answers; end

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/example/solve.rb#38
  def solution(module_name, part, input); end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/scaffold.rb#5
class AdventOfCode::Commands::Scaffold < ::AdventOfCode::Commands::Command
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/scaffold.rb#6
  def execute; end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/scaffold.rb#38
  def solution_file_contents; end
end

# source://advent_of_code_cli//lib/advent_of_code_cli/commands/solve.rb#5
class AdventOfCode::Commands::Solve < ::AdventOfCode::Commands::Command
  # @raise [MissingInputError]
  #
  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/solve.rb#6
  def execute; end

  private

  # source://advent_of_code_cli//lib/advent_of_code_cli/commands/solve.rb#29
  def solution(module_name, part, input); end
end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#9
class AdventOfCode::Error < ::StandardError; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#10
class AdventOfCode::ExampleAlreadyExistsError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#11
class AdventOfCode::InvalidDayError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#12
class AdventOfCode::MissingCookieError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#13
class AdventOfCode::MissingExampleError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#14
class AdventOfCode::MissingInputError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli.rb#15
class AdventOfCode::MissingSolutionError < ::AdventOfCode::Error; end

# source://advent_of_code_cli//lib/advent_of_code_cli/version.rb#4
AdventOfCode::VERSION = T.let(T.unsafe(nil), String)
